tags:
  - name: user
    description: user routes
  - name: auth
    description: authentication routes
  - name: match
    description: match routes

paths:
  # [GET] /match
  /match:
    get:
      tags:
        - match
      summary: Get matches
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: query
          name: ended
          schema:
            type: boolean
          required: true
      responses:
        200:
          description: "OK"

  # [POST] /match/bet
  /match/bet:
    post:
      tags:
        - match
      summary: Make bet on team
      consumes:
        - application/x-www-form-urlencoded
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/definitions/matchBet"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"

  # [GET] /user
  /user:
    get:
      tags:
        - user
      summary: Get authenticated user
      security:
        - bearerAuth: []
      responses:
        200:
          description: "OK"

  # [POST] /auth/login
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      consumes:
        - application/x-www-form-urlencoded
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/definitions/loginUser"
      responses:
        200:
          description: "OK"

  # [GET] /auth/login
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      consumes:
        - application/x-www-form-urlencoded
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/definitions/createUser"
      responses:
        200:
          description: "OK"

# definitions
definitions:
  matchBet:
    type: object
    required:
      - match_id
      - bet
      - team
    properties:
      match_id:
        type: string
      bet:
        type: number
      team:
        type: number
        description: 1 or 2
  createUser:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
        description: username
      password:
        type: string
        format: password
        description: user password
      email:
        type: string
        description: user email
  loginUser:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: username
      password:
        type: string
        format: password
        description: user password

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

schemes:
  - https
  - http
